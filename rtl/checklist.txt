L1B Tapeout Checklist

1. CPLD

i. Verification

   Testbench to test at least the following

   - glitch free switch of high speed to low speed clock and vice-versa
   - correct operation of RDY signal
     o phase of assertion and deassertion
   - correct decoding of himem RAM & IO and lomem addresses
   - correct CPU/HOST databus handling (74273 function)

   ** ALL DONE. RE

ii. Timing

    STA

    - check clock switch path time
    - check critical path through switch + CPU + latch/logic in 1/2 cycle @ 8MHz

    ** DONE. RE. OK in 9572 and 95108 optimizing for 'area'

    Simulate testbench with gross delays for
    
    - clock switch path (nominal 5, 10 or 15ns)
    - CPU ck -> addr valid path ( worst case 30ns )

    ** NOT DONE for first TO.
    
iii Synthesis

    - check constraints
    - check synth results, warnings
    - check pin assignments vs netlister lib file
      o load netlister lib file and use python to write out UCF pin assignments
        i.e. same source, then check result

    ** Checked pin allocation (and found 1 bug): Xilinx flags error when supply pins are wrongly assigned. RE.

2. PCB Layout/Netlist

i.  Manual check of verilog source
   
   - could create a testbench for the whole PCB with simplified models of
     CPU etc to just respond/generate events on pins. Probably not going to
     happen...

   - check connections to components vs datasheet

   ** DONE for CPLD, I2C lib and 65816. RE

   - check netlister warnings
     o one pin nets
     o replicated component pin assignments
     o unassigned component pins   
     o undeclared or unused nets

   ** DONE. RE

ii. Lib checks

   - check component pin outs
     (one-off check for some standard libs which can be reused later)
     o ICs correct vs datasheet
       * oscillator             ** DONE
       * I2C components         ** DONE
       * CPLD                   ** DONE
       * RAM                    ** DONE
       * CPU                    ** DONE
     o Connectors correct vs L1 physical
       * e.g. mirrored connections of 40W header compared with 6502

     ** DONE (checked 40W vs L1 layout xls)

iii. Netlist/netlister.py

   - Gates vs Gates
     o verify that SCR output for Eagle is correct
       * Write netlist (ie. _not_ SCR)  from netlister.py
       * Write netlist from Eagle layout (created with SCR)
       * Compare netlist vs netlist

   ** DONE.
   ** Wrote netlist from netlister.py
   ** Exported netlist from Eagle
   ** Compared the two and they match via netcompare.py
   ** (and verified that breaking a wire results in a different Eagle output netlist
   ** and causes a mismatch)

   - manual LVS
     o check random sample of Eagle netlist output vs original verilog

iv.  Layout

   - Visually trace selection of tracks
     o check clocks
     o check power 
     o check selection of data signals

   ** DONE, but on handful of tracks only.

   - Eagle DRC
     o check Eagle rules against PCBPool/PCBtrain rules
   
   ** DONE. No errors.


Notes:

- Current CPLD implementation has negedge flop to determine hs/ls clock switch
  o refinement could be to use negphase latch for this in conjunction with
    posphase latch on part of preceding logic
    * allows > 1/2 cycle for the switch conditionn to be detected
    * BUT involves latch -> latch timing which is not handled well by STA.
  o best to use the current arrangement as more robust for STA
    * should easily work with 4Mhz fast clock
    * may work with 8Mhz fast clock with 15ns rated CPLD, more so when using 10ns rated CPLD
      * ie WDC CPU may be closer to typical (10-15ns) in ck->addr delay rather than max (30ns)
      * delay through clock switch on L1 board is ~10ns using ACT logic 

** DONE. Current implementation has changed to use latches in place of flops for the switch.


